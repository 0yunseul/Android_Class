package com.example.and04_framelayout;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    Button btn;
    ImageView imgv1, imgv2, imgv3;  //선언
    int count = 0;  //count버튼 누를때 (횟수) 는 int로 저장된다. 변수는 메소드 내부에 선언하면 전체에서 못쓰지.


    //이미지뷰 3개를 하나를 자료구조로 묶어보기
    //1.배열
   //ImageView[] images = new ImageView[3]; //3개 저장할거임 (null로 3개 들어가있음)


   //2.ArrayList
   ArrayList<ImageView> images = new ArrayList<ImageView>();




    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        btn = findViewById(R.id.btn);
        //이미지뷰 3개를 하나를 자료구조로 묶은거에 값 담기
        //1.배열
       /* images[0]=findViewById(R.id.imgv1);
        images[1]=findViewById(R.id.imgv2);
        images[2]=findViewById(R.id.imgv3);*/

        //2.arraylist
        images.add(findViewById(R.id.imgv1));
        images.add(findViewById(R.id.imgv2));
        images.add(findViewById(R.id.imgv3));


    /*    imgv1 = findViewById(R.id.imgv1);
        imgv2 = findViewById(R.id.imgv2);
        imgv3 = findViewById(R.id.imgv3);*/


        btn.setOnClickListener(new View.OnClickListener() { //버튼 클릭시  행해지는 구현부를 선언한다.
            @Override
            public void onClick(View v) {
               //count++;  //count (횟수)는 증가!
               //Log.d("로그", "onCreate :" + count); //이미지 바꾸기 버튼을 클릭할때마다 클릭한 횟수 (INT) -> 변수이름은 count로 선언함 가 찍히게


                //이미지 바꾸기 버튼을 클릭할때마다 이미지가 바뀌게 처리를한다
                // imgv1  보이고 ->버튼클릭 ->imgv2.......-> imgv1
                //버튼 첫번째 클릭 : imgv1 보이고 -> 2번째 클릭 : imgv2 보이게. ...
                //imgv1.setVisibility(View.GONE); //xml디자인에서~ visibility="gone";
                //imgv2.setVisibility(View.VISIBLE);

                /*if(count ==3) count = 0;

                if (count == 0) {
                        imgv1.setVisibility(View.GONE);
                        imgv2.setVisibility(View.VISIBLE);
                    } else if (count == 1) {
                        imgv2.setVisibility(View.GONE);
                        imgv3.setVisibility(View.VISIBLE);
                    } else if (count == 2) {
                        imgv3.setVisibility(View.GONE);
                        imgv1.setVisibility(View.VISIBLE);
                    }
                    count++;
*/

                //1. 배열구조이용해서 할때
           /*     if(count>images.length-1){
                    count = 0;
                }
                for(int i = 0; i <images.length; i++){
                    images[i].setVisibility(View.GONE);
                }
                images[count].setVisibility(View.VISIBLE);
                count++;


*/
            }//클릭 될 때마다 실행되는 부분
        }); //파라메터가 interface인 메소드 setter (?)



    // 2. 메모리  올리기
    JyOnclickListener onclick = new JyOnclickListener() {
        //멤버 : {} 사이에 있는 것
        //instance 멤버, static 멤버
            @Override
            public void onClick(String v) {
                Log.d("주영", "onClick: 온클릭 jy");
            }
        };

    //3. String v  에 값을 준다.
    onclick.onClick("값");


    }//onCreate()


    //1.interface 만들기
    // interface 만드는 이유 : 실제 화면에 버튼이 클릭되었을때 onclick()실행되게끔하기위해
    interface JyOnclickListener {
        public void onClick(String v); //string 타입으로
    }
    }
